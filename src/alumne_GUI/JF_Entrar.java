/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package alumne_GUI;

/**
 *
 * @author alumne
 */
import java.util.Arrays;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import metodes.GUI_UF3;

import proyecto.*;

public class JF_Entrar extends javax.swing.JFrame {

    private static int filaSel = -1;
    private static int casellaBuida = -1;
    ALumne[] array = Proyecto.getArray();
    
    //variables per a poder recuperar pilot borrat
    String[] recuperar=new String[2];
    int mp, ms;
    double nota1, nota2;
    boolean estat;

    public JF_Entrar() {

        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        setTitle("ALumnes v1.1 by Ayub Ait");

        inicialitzaComponents();

    }

    /**
     * Mètode de inicialitrazaComponents inicia el rimer components se encarega
     * de deshabilitar el botons borrar i modificar i posa per defecte a alumne
     * en estat Aprovat i per ultim carega el metode inicialitzarVariables de el
     * projecte modular i carrega la taula creada previament
     *
     */
    private void inicialitzaComponents() {

        //per defecte el botons borar y modificar estaran disactivats
        Borrar.setEnabled(false);
        modificar.setEnabled(false);
        //Inicialment el Alumne estara aprovat
        siestat.setSelected(true);
        recuperarDades.setEnabled(false);
        // inicio les variables del projecte
        Proyecto.inicialitzarVariables();

        //CArgo la taula desde la biblioteca de la classe GUI_UF3.java
        GUI_UF3.carregaTaula(new String[]{"Fila", "Nom", "Cicle", "M. Aprovats", "M.Suspesos",
            "Aprovat?", "Nota Alta", "Nota Baixa"}, transformaDades(Proyecto.getArray()), taula);
    }

    /**
     * Mètode que transformaDades l'array dels alumnes en una matriu
     *
     * @param dades array que conté les dades a transformar
     * @return una matriu d'objectes que conté les dades que ens interessen dels
     * pilots
     */
    public static Object[][] transformaDades(ALumne[] dades) {

        // Declaro el Objecte amb el nom resultat
        Object[][] resultat = new Object[dades.length][8];
        //Variable per comptar el número de alumnes en dades que hi ha a l'array de dades
        int omplits = 0;

        // declaro estes variablies per poder personalitzar el TRUE i el FALSE 
        // i que em surtigue SI o NO
        String s = "Si";
        String n = "No";

        // Un bucle for per ompli la matriu amb les dades del alumne
        for (int i = 0; i < dades.length; i++) {
            if (dades[i].isOmplit()) {
                resultat[omplits][0] = i + 1;
                resultat[omplits][1] = dades[i].getNom();
                resultat[omplits][2] = dades[i].getNomCicle();
                resultat[omplits][3] = dades[i].getMp();
                resultat[omplits][4] = dades[i].getMs();
                resultat[omplits][6] = dades[i].getNota1();
                resultat[omplits][7] = dades[i].getNota2();
                // Aqui es on Personalitzo el True i False
                if (dades[i].isEstat()) {
                    resultat[omplits][5] = s;
                } else {
                    resultat[omplits][5] = n;
                }

                omplits++;
            }
        }
        //Retornem només alumnes plens
        return Arrays.copyOf(resultat, omplits);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")


    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPasswordField1 = new javax.swing.JPasswordField();
        Afegir = new javax.swing.JButton();
        modificar = new javax.swing.JButton();
        Borrar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        Ccicle = new javax.swing.JTextField();
        Cnota1 = new javax.swing.JTextField();
        Cmp = new javax.swing.JTextField();
        Cms = new javax.swing.JTextField();
        Cnota2 = new javax.swing.JTextField();
        Tancar = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        taula = new javax.swing.JTable();
        siestat = new javax.swing.JRadioButton();
        noestat = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        CNom = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();
        recuperarDades = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jPasswordField1.setText("jPasswordField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(java.awt.Color.lightGray);
        setForeground(java.awt.Color.lightGray);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Afegir.setText("+ Afegir");
        Afegir.setToolTipText("");
        Afegir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AfegirActionPerformed(evt);
            }
        });
        getContentPane().add(Afegir, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 360, 140, 30));

        modificar.setText("Modificar");
        modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarActionPerformed(evt);
            }
        });
        getContentPane().add(modificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 360, 110, -1));

        Borrar.setText("- Borrar");
        Borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BorrarActionPerformed(evt);
            }
        });
        getContentPane().add(Borrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 360, 110, -1));

        jLabel1.setFont(new java.awt.Font("TlwgTypewriter", 3, 36)); // NOI18N
        jLabel1.setForeground(java.awt.Color.white);
        jLabel1.setText("ALumnes v1.0");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 20, 299, -1));

        Ccicle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CcicleActionPerformed(evt);
            }
        });
        getContentPane().add(Ccicle, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 460, 205, -1));
        getContentPane().add(Cnota1, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 420, 62, -1));

        Cmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CmpActionPerformed(evt);
            }
        });
        getContentPane().add(Cmp, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 460, 60, -1));

        Cms.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CmsActionPerformed(evt);
            }
        });
        getContentPane().add(Cms, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 500, 60, -1));

        Cnota2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cnota2ActionPerformed(evt);
            }
        });
        getContentPane().add(Cnota2, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 540, 60, -1));

        Tancar.setForeground(java.awt.Color.orange);
        Tancar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/x_button.png"))); // NOI18N
        Tancar.setText("Tancar");
        Tancar.setContentAreaFilled(false);
        Tancar.setDefaultCapable(false);
        Tancar.setFocusPainted(false);
        Tancar.setFocusable(false);
        Tancar.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        Tancar.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/img/25.png"))); // NOI18N
        Tancar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/img/40.png"))); // NOI18N
        Tancar.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/img/40.png"))); // NOI18N
        Tancar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TancarActionPerformed(evt);
            }
        });
        getContentPane().add(Tancar, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 590, 110, 40));

        taula.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        taula.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                taulaMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(taula);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 573, 256));

        siestat.setForeground(java.awt.Color.white);
        siestat.setText("Aprovat");
        siestat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                siestatMouseClicked(evt);
            }
        });
        getContentPane().add(siestat, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 520, -1, -1));

        noestat.setForeground(java.awt.Color.white);
        noestat.setText("No aprovat");
        noestat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                noestatMouseClicked(evt);
            }
        });
        getContentPane().add(noestat, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 520, -1, -1));

        jLabel2.setForeground(java.awt.Color.white);
        jLabel2.setText("Nom i Cognom:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 420, -1, -1));

        jLabel8.setForeground(java.awt.Color.white);
        jLabel8.setText("I la nota més baixa(*):");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 540, -1, 20));

        CNom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CNomMouseClicked(evt);
            }
        });
        CNom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CNomActionPerformed(evt);
            }
        });
        getContentPane().add(CNom, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 420, 205, -1));

        jLabel3.setForeground(java.awt.Color.white);
        jLabel3.setText("Nom del Cicle:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 460, -1, -1));

        jLabel4.setForeground(java.awt.Color.white);
        jLabel4.setText("Nº de Moduls aprovats(*):");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 420, -1, -1));

        jLabel6.setForeground(java.awt.Color.white);
        jLabel6.setText("Nº de Moduls suspesos(*):");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 510, -1, -1));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 350, 573, 16));
        getContentPane().add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 400, 573, -1));

        jLabel7.setForeground(java.awt.Color.white);
        jLabel7.setText(" I la nota més alta(*):");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 460, -1, -1));
        getContentPane().add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 500, 320, 10));
        getContentPane().add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 560, 330, 10));

        jButton1.setBackground(java.awt.Color.white);
        jButton1.setForeground(java.awt.Color.orange);
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/tornar1.png"))); // NOI18N
        jButton1.setText("Menu Principal");
        jButton1.setBorderPainted(false);
        jButton1.setContentAreaFilled(false);
        jButton1.setDefaultCapable(false);
        jButton1.setFocusPainted(false);
        jButton1.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/img/25_2.png"))); // NOI18N
        jButton1.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/img/tornar.png"))); // NOI18N
        jButton1.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/img/tornar.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 590, 210, 40));

        recuperarDades.setText("Recuperar ultim borrat");
        recuperarDades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recuperarDadesActionPerformed(evt);
            }
        });
        getContentPane().add(recuperarDades, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 360, -1, -1));

        jLabel5.setForeground(java.awt.Color.white);
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/HD-Solid-Color-Wallpaper-19.jpg"))); // NOI18N
        jLabel5.setText("jLabel5");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 660, 660));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * El metode dadesCorrectes se encarrega que mira si les dades que se han
     * posat a les caselles son correctes i retorna un TRUE o FALSE si estan
     * corectes o no
     */
    private boolean dadesCorrectes() {

        //Creem una excepio si la casella esta buida o esta sin res
        try {
            if (CNom.getText().trim().equals("") || Ccicle.getText().trim().equals("")) {

                throw new StringIndexOutOfBoundsException();
            }

            Integer.valueOf(Cmp.getText());
            Double.valueOf(Cnota1.getText());
            Integer.valueOf(Cms.getText());
            Double.valueOf(Cnota2.getText());

        } catch (StringIndexOutOfBoundsException | NumberFormatException e) {
            return false;
        }

        return true;

    }

    /**
     * Aquest metode es un metode de el botto Borra que se ejecuta quan el
     * usuari ha clicat sobre ell
     *
     * @param evt rep un event
     */
    private void BorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BorrarActionPerformed

        //-------EL BOTO de BORRAR CUAL ES CLICA FARA TOT AIXO----
        //creaem un nou model de taula del que hi ha teniem  una copia per 
        // dit de una altra manera
        DefaultTableModel taula1 = (DefaultTableModel) taula.getModel();
        
            
        // guardem la fila selecionada  a  la variable filaSel
        filaSel = taula.getSelectedRow();     
        
        
         
        // creem un array que te les files selecionades
        int[] rows = taula.getSelectedRows();
        Arrays.sort(rows);

        // Creem un IF per saber si hi ha una fila selecionada o no
        if (filaSel == -1) {
            // Si no hi ha fila selecionada 
            JOptionPane.showMessageDialog(null, "Selecciona una fila");
        } else {
            //Si hi ha fila selecionada
            
            //Guardo una copia  de array per recoperar despres
            //------------------------------------------------------------------
           
            
        
             recuperar[0]=(String)array[filaSel].getNom();
             recuperar[1]=(String)array[filaSel].getNomCicle();
             
             
             
             mp=array[filaSel].getMp();
           ms=array[filaSel].getMs();
            //com jo he personalitzar una variable aki i no a la classe ALumne.java fat aixo 
            
            nota1=array[filaSel].getNota1();
             nota2=array[filaSel].getNota2();
             estat=array[filaSel].isEstat();
             
             
             //activo el booto
               recuperarDades.setEnabled(true);
    //------------------------------------------------------------------
    
            //REcoreme la array creat  i borrem la fila selecionada
            for (int i = rows.length - 1; i >= 0; i--) {
                
                taula1.removeRow(rows[i]);
            }
                  

           

            
            //Borrem les dades de cada variable del alumne de la fila o posicio que usuari a selcionat
            array[filaSel].setNom(CNom.getText().trim());
            array[filaSel].setNomCicle(Ccicle.getText().trim());
            array[filaSel].setMp(Integer.valueOf(Cmp.getText()));
            array[filaSel].setMs(Integer.valueOf(Cms.getText()));
            //com jo he personalitzar una variable aki i no a la classe ALumne.java fat aixo 
            if (siestat.isSelected()) {
                array[filaSel].setEstat(true);
            } else {
                array[filaSel].setEstat(false);
            }
            array[filaSel].setNota1(Double.valueOf(Cnota1.getText()));
            array[filaSel].setNota2(Double.valueOf(Cnota2.getText()));
            array[filaSel].setOmplit(false);
                
            
            //tornem a posar la posicio de la fila 0
            filaSel--;
        }
        // Per Ultim tornem a Actualizar la taula per ra que le usuari persegui el cambis a panel o pestaña grafica
        GUI_UF3.carregaTaula(new String[]{"Fila", "Nom", "Cicle", "M. Aprovats", "M.Suspesos", "Aprovat?", "Nota Alta", "Nota Baixa"},
                transformaDades(Proyecto.getArray()), taula);

    }//GEN-LAST:event_BorrarActionPerformed

    /**
     * Aquest metode es un metode de el botto Afegir que se ejecuta quan el
     * usuari ha clicat sobre ell
     *
     * @param evt rep un event
     */
    private void AfegirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AfegirActionPerformed

        // -----EL BOTTO de AFEGIR ---
        // lo que hem de fer quan usuari fa click a botto de afegir es mira si les caselles estan be i amb informacio
        // Aixo ho fem gracies al metode que hem creat abans dadesCorrectes..
        if (!dadesCorrectes()) {
            // si no estaba be mostemli el messatge i acabem
            JOptionPane.showMessageDialog(this, "Dades de les caselles incorrectes");
            //poso la atencio a la casella Nom per a que modifici
            CNom.requestFocus();
            return;
        }

        //Si le caselles estan be
        //MOLT IMPORTANT tenim que saber en quina posicio tinim que affegir el alumne
        //per aixo haurem de recorre tot array i on no esta omplit els guardem alli
        int i;
        for (i = 0; i < array.length && array[i].isOmplit(); i++);
        filaSel = i;
        if (i < array.length) {

            // Guardem la informacio de cada casela al vector de alumne
            array[filaSel].setNom(CNom.getText().trim());
            array[filaSel].setNomCicle(Ccicle.getText().trim());
            array[filaSel].setMp(Integer.valueOf(Cmp.getText()));
            array[filaSel].setMs(Integer.valueOf(Cms.getText()));
            if (siestat.isSelected()) {
                array[filaSel].setEstat(true);
            } else {
                array[filaSel].setEstat(false);
            }
            array[filaSel].setNota1(Double.valueOf(Cnota1.getText()));
            array[filaSel].setNota2(Double.valueOf(Cnota2.getText()));
            array[filaSel].setOmplit(true);

            // Jo al projecte modular creo un medote  que guarda el cambis 
            proyecto.Proyecto.metodeGuardarCambis();
            JOptionPane.showMessageDialog(this, "Nou registre inserit correctament!!");
            //buido les casselles
            buida();

        } else {

            // si la array esta plem mostrem aquet messatge 
            JOptionPane.showMessageDialog(this, "NO CABEM MÉS ALUMNES LA TAULA ESTA PLENA!! Borran algun i Torna a afegir");
            CNom.requestFocus();
            //buido les casselles
            buida();
            return;
        }

        // Per Ultim tornem a Actualizar la taula per ra que le usuari persegui el cambis a panel o pestaña grafica
        GUI_UF3.carregaTaula(new String[]{"Fila", "Nom", "Cicle", "M. Aprovats", "M.Suspesos", "Aprovat?", "Nota Alta", "Nota Baixa"},
                transformaDades(Proyecto.getArray()), taula);


    }//GEN-LAST:event_AfegirActionPerformed
    /**
     * Aquest metode se ejecuta quan el
     * usuari ha clicat sobre ell i lo que fa es que Guarda les dades y tanca
     *
     * @param evt rep un event
     */
    private void TancarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TancarActionPerformed
        // TODO add your handling code here:
// quan es clica al botto tancar 
        // guardem les dades cridan al metode finalitazar del projecte
        proyecto.Proyecto.finalitzar();
        //apaguem
        System.exit(0);

    }//GEN-LAST:event_TancarActionPerformed
    /**
     * se ejecuta quan el usuari tancar desde la X (en aquet cas no se ejecutara perque tinc desctivar la X pera que no es mostre)
     * @param evt
     */
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        proyecto.Proyecto.finalitzar();
        System.exit(0);
    }//GEN-LAST:event_formWindowClosing

    private void CmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CmpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CmpActionPerformed

    private void Cnota2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cnota2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Cnota2ActionPerformed

    private void CmsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CmsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CmsActionPerformed
/**
     * Aquest metode se ejecuta quan el
     * usuari ha clicat sobre ell i lo que fa es modificar un alumne 
     *
     * @param evt rep un event
     */
    private void modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarActionPerformed
        //---BOTTo de MODificar--

        //per a modifar alumne primer que tot haurem de sabe si una fila esta selecionada
        // i que si recormen el bootto esta deshabilitar per defecte hasta que usuari selecione una fila
        // guardem la fila selcoionada
        filaSel = taula.getSelectedRow();

        //comprovem si hi ha fila selecionada o no
        if (filaSel == -1) {
            //aqui si no hi ha cap fila selecionada
            JOptionPane.showMessageDialog(null, "Selecciona una fila");
            //buido les casselle si en cas de que hagui informacio
            buida();
        } else {

            // lo que hem de fer quan usuari fa click a botto de afegir es mira si les caselles estan be i amb informacio
            // Aixo ho fem gracies al metode que hem creat abans dadesCorrectes..
            if (!dadesCorrectes()) {
                // si no estaba be mostemli el messatge i acabem
                JOptionPane.showMessageDialog(this, "Dades de les caselles incorrectes");
                //poso la atencio a la casella Nom per a que modifici
                CNom.requestFocus();
                return;
            }

            //Si le caselles estan be
            //MOLT IMPORTANT tenim que saber en quina posicio tinim que affegir el alumne
            //per aixo haurem de recorre tot array i on no esta omplit els guardem alli
            // Guardem la informacio de cada casela al vector de alumne
            array[filaSel].setNom(CNom.getText().trim());
            array[filaSel].setNomCicle(Ccicle.getText().trim());
            array[filaSel].setMp(Integer.valueOf(Cmp.getText()));
            array[filaSel].setMs(Integer.valueOf(Cms.getText()));
            if (siestat.isSelected()) {
                array[filaSel].setEstat(true);
            } else {
                array[filaSel].setEstat(false);
            }
            array[filaSel].setNota1(Double.valueOf(Cnota1.getText()));
            array[filaSel].setNota2(Double.valueOf(Cnota2.getText()));
            array[filaSel].setOmplit(true);

            // Jo al projecte modular creo un medote  que guarda el cambis 
            proyecto.Proyecto.metodeGuardarCambis();
            JOptionPane.showMessageDialog(this, "se ha modificat correctament");
            //buido les casselles
            buida();

            // Per Ultim tornem a Actualizar la taula per ra que le usuari persegui el cambis a panel o pestaña grafica
            GUI_UF3.carregaTaula(new String[]{"Fila", "Nom", "Cicle", "M. Aprovats", "M.Suspesos", "Aprovat?", "Nota Alta", "Nota Baixa"},
                    transformaDades(Proyecto.getArray()), taula);


    }//GEN-LAST:event_modificarActionPerformed
    }

    /**
     * El metode buida me serveix per a buida les caselles per a no tornar a
     * escriure cada vegada aquet codi...
     */
    public void buida() {
        //Poso les caselles en blanc
        CNom.setText("");
        Ccicle.setText("");
        Cmp.setText("");
        Cnota1.setText("");
        Cms.setText("");
        Cnota2.setText("");
        siestat.setSelected(true);
        noestat.setSelected(false);
    }
    private void CNomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CNomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CNomActionPerformed

    private void CcicleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CcicleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CcicleActionPerformed
    /**
     * Aquest metode   se ejecuta quan el usuari fa click a la taula o fila 
     * i activa els botons de afegir,borrar,modificar
     *
     * @param evt rep un event
     */
    private void taulaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_taulaMouseClicked
        // TODO add your handling code here:

        //guardo la posicio de la fila selcionada
        filaSel = taula.getSelectedRow();
        System.out.println(filaSel);
        if (filaSel == -1) {
            //Si no han seleccionat cap fila desactivo els botons de borrar i modificar
            Borrar.setEnabled(false);
            modificar.setEnabled(false);
            Afegir.setEnabled(false);

            //Poso les caselles en blanc
            buida();
        } else {
            //Si han seleccionat alguna fila activo els botons de borrar i modificar
            Borrar.setEnabled(true);
            modificar.setEnabled(true);

            //Actualizo les caselles en la informació de la fila seleccionada
            //per als nombres pasem el value of
            CNom.setText((String) taula.getValueAt(filaSel, 1));
            Ccicle.setText((String) taula.getValueAt(filaSel, 2));

            Cmp.setText(String.valueOf(taula.getValueAt(filaSel, 3)));
            Cms.setText(String.valueOf(taula.getValueAt(filaSel, 4)));

            Cnota1.setText(String.valueOf(taula.getValueAt(filaSel, 6)));
            Cnota2.setText(String.valueOf(taula.getValueAt(filaSel, 7)));

        }

    }//GEN-LAST:event_taulaMouseClicked

    private void CNomMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CNomMouseClicked
        // TODO add your handling code here:

        Afegir.setEnabled(true);


    }//GEN-LAST:event_CNomMouseClicked

    /**
     * Aquest metode se ejecuta quan el
     * usuari ha clicat sobre ell i lo que fa es que el checkbox Si aprovat se desactive
     *
     * @param evt rep un event
     */
     
    private void noestatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_noestatMouseClicked
        // TODO add your handling code here:

        siestat.setSelected(false);
    }//GEN-LAST:event_noestatMouseClicked

    /**
     * Aquest metode se ejecuta quan el
     * usuari ha clicat sobre ell i lo que fa es que el checkbox NO aprovat se desactive
     *
     * @param evt rep un event
     */
    private void siestatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_siestatMouseClicked
        // TODO add your handling code here:

        noestat.setSelected(false);
    }//GEN-LAST:event_siestatMouseClicked

    
    /**
     * Metode que quan es clicka el botto Menu principal es  mostre i la acual s'amagi   
     * @param evt 
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        GUI_Principal mostra = new GUI_Principal();
          proyecto.Proyecto.finalitzar();
        mostra.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void recuperarDadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recuperarDadesActionPerformed
        // TODO add your handling code here:
        int i;
        for (i = 0; i < array.length && array[i].isOmplit(); i++);
        filaSel = i;
        if (i < array.length) {

            // Guardem la informacio de cada casela al vector de alumne
            array[filaSel].setNom(recuperar[0]);
            array[filaSel].setNomCicle(recuperar[1]);
            array[filaSel].setMp(mp);
            array[filaSel].setMs(ms);
            if (estat) {
                array[filaSel].setEstat(true);
            } else {
                array[filaSel].setEstat(false);
            }
            array[filaSel].setNota1(nota1);
            array[filaSel].setNota2(nota2);
            array[filaSel].setOmplit(true);

            // Jo al projecte modular creo un medote  que guarda el cambis 
            proyecto.Proyecto.metodeGuardarCambis();
            JOptionPane.showMessageDialog(this, "has recuperat el ultim alumne borrat.. correctament!!");
            //buido les casselles
            buida();
            

        } else {

            // si la array esta plem mostrem aquet messatge 
            JOptionPane.showMessageDialog(this, "NO CABEM MÉS ALUMNES LA TAULA ESTA PLENA!!per que no caben");
            CNom.requestFocus();
            //buido les casselles
            buida();
            return;
        }
        // Per Ultim tornem a Actualizar la taula per ra que le usuari persegui el cambis a panel o pestaña grafica
            GUI_UF3.carregaTaula(new String[]{"Fila", "Nom", "Cicle", "M. Aprovats", "M.Suspesos", "Aprovat?", "Nota Alta", "Nota Baixa"},
                    transformaDades(Proyecto.getArray()), taula);
        
        
        
    }//GEN-LAST:event_recuperarDadesActionPerformed

    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JF_Entrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JF_Entrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JF_Entrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JF_Entrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JF_Entrar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Afegir;
    private javax.swing.JButton Borrar;
    private javax.swing.JTextField CNom;
    private javax.swing.JTextField Ccicle;
    private javax.swing.JTextField Cmp;
    private javax.swing.JTextField Cms;
    private javax.swing.JTextField Cnota1;
    private javax.swing.JTextField Cnota2;
    private javax.swing.JButton Tancar;
    private javax.swing.JButton jButton1;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JButton modificar;
    private javax.swing.JRadioButton noestat;
    private javax.swing.JButton recuperarDades;
    private javax.swing.JRadioButton siestat;
    private javax.swing.JTable taula;
    // End of variables declaration//GEN-END:variables

}
